! Local flow control - global exception knowledge
! Throw performs local jumps to the end of the try frame or to finally
! Manage any exception that was throwed previously
! Single throw call in local TRY scope
! Single throw call in local CATCH scope
! Single throw call in local FINALLY scope
! Allow Re-throw when catching
! Only catch a single exception in a TRY frame

#define TRY                                                                            \
        BLOCK ;                                                                        \
            class(Exception), allocatable :: NullException;                            \
            allocate(NullException);                                                   \
            call TheExceptionStack%OpenFrame();                                        \
            do while(.true.);                                                          \
                select type (TheException=>NullException);                             \
                    class is (Exception);                                              \
                        associate(TheException=>TheException);

#define THROW(exception)                                                               \
                        if(.true.) then;                                               \
                            call TheExceptionStack%Push(exception, __FILE__, __LINE__);\
                            exit;                                                      \
                        endif;

#define CATCH(Exception, Ex)                                                            \
                        end associate;                                                 \
                    class DEFAULT;                                                     \
                        call TheExceptionStackIterator%Next();                         \
                        cycle;                                                         \
                end select;                                                            \
                exit;                                                                  \
            enddo;                                                                     \
            call TheExceptionStackIterator%Init(TheExceptionStack);                    \
            do while(.not. TheExceptionStackIterator%HasFinished());                   \
                select type (TheException=>TheExceptionStackIterator%Get());           \
                    class is(Exception);                                               \
                        call TheException%Catch();                                     \
                        if(allocated(NullException)) deallocate(NullException);        \
                        allocate(NullException, Mold=TheException);                    \
                        call NullException%Clone(TheException);                        \
                        call TheExceptionStack%Clean();                                \
                        call TheExceptionStackIterator%Free();                         \
                        associate(Ex=>NullException);

#define FINALLY                                                                        \
                        end associate;                                                 \
                    class DEFAULT;                                                     \
                        call TheExceptionStackIterator%Next();                         \
                        cycle;                                                         \
                end select;                                                            \
                exit;                                                                  \
            enddo;                                                                     \
            do while(.true.);                                                          \
                select type (TheException=>NullException);                             \
                    class is (Exception);                                              \
                        associate(Ex=>TheException);

#define ENDTRY                                                                         \
                        end associate;                                                 \
                    class DEFAULT;                                                     \
                        call TheExceptionStackIterator%Next();                         \
                        cycle;                                                         \
                end select;                                                            \
                exit;                                                                  \
            enddo;                                                                     \
            call TheExceptionStack%CloseFrame();                                       \
            deallocate(NullException);                                                 \
        ENDBLOCK;

